define(["require","../menu"],function(h){var g;var b=false;var d;var c;var e;function i(){var j=h("menu");d.on("joinACK",function(k){j.startGame(k.student,k.level,{multi:"connector"})});d.on("joinERROR",function(k){if(k.error==="noplayer"){alert("ERROR: Parece que nadie ha creado una partida con este nombre.");j.connectPanel()}else{alert("ERROR: Este nombre ya se está usando en una partida ahora mismo.");j.connectPanel()}})}function f(){d.emit("join",{host:e,friend:c})}function a(){d.on("disconnected",function(){Crafty("Character").stopMultiplayer();alert("¡Vaya! Tu compañero se ha desconectado... Tendrás que volver al menú principal.");Crafty("obj").each(function(){this.destroy()});window.location="/game"})}return{startConnector:function(k){if(!b){var j="http://"+window.location.hostname;if(window.location.port===""){j+=":80"}else{j+=":"+window.location.port}e=k+"connector";c=k;d=io.connect(g);d.on("connecting",function(){var l=['<div class="menu">','<div class="separator">Conectando con el servidor...</div>',"<p>Enviando petición de conexión al servidor...</p>","</div>"].join("\n");$(".container").empty();$(".container").append(l)});d.on("error",function(){window.location="/game"});d.on("connect",function(){i();a();f();b=true})}else{f()}},sendMovement:function(j,k){d.emit("movementConnectorToCreator",{friend:c,x:j,y:k})},onReceiveMovement:function(j){d.on("movementCreatorToConnector",function(k){j(k)})},sendDamage:function(j,k){d.emit("damageConnectorToCreator",{friend:c,enemy:j,damage:k})},onReceiveDamage:function(j){d.on("damageCreatorToConnector",function(k){j(k)})},sendUpdateHealth:function(j){d.emit("updateHealthConnectorToCreator",{friend:c,total:j})},onReceiveUpdateHealth:function(j){d.on("updateHealthCreatorToConnector",function(m){var l=[];var n=Crafty("Enemy");for(var k=0;k<m.total;k++){if(Crafty(n[k]).length>0){l[Crafty(n[k])._id]=Crafty(n[k])._enemyHealth}}d.emit("updateHealthConnectorToCreatorACK",{friend:c,healths:l})});d.on("updateHealthCreatorToConnectorACK",function(k){j(k)})},sendExit:function(){d.emit("exitConnectorToCreator",{friend:c})},onReceiveExit:function(j){d.on("exitCreatorToConnector",function(){j()})},closeConnector:function(){d.emit("close")}}});