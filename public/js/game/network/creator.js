define(["require","../menu"],function(j){var d;var a=false;var h;var e;var c;function f(){var l=j("menu");h.on("readyACK",function(){l.waitingMenu(c)});h.on("readyERROR",function(){alert("ERROR: Este nombre ya se está usando en una partida ahora mismo.");l.createPanel()})}function i(){var l=j("menu");h.emit("ready",{host:c,student:l.readStudentCookie(),level:l.getLevel()})}function k(){h.on("join",function(m){var l=j("menu");e=m.friend;g();l.startGame(l.readStudentCookie(),l.getLevel(),{multi:"creator"})})}function g(){h.emit("engaged",{host:c,friend:e})}function b(){h.on("disconnected",function(){Crafty("Character").stopMultiplayer()})}return{startCreator:function(m){if(!a){var l="http://"+window.location.hostname;if(window.location.port===""){l+=":80"}else{l+=":"+window.location.port}c=m;h=io.connect(l);h.on("connecting",function(){var n=['<div class="menu">','<div class="separator">Conectando con el servidor...</div>',"<p>Enviando petición de conexión al servidor...</p>","</div>"].join("\n");$(".container").empty();$(".container").append(n)});h.on("error",function(){window.location="/game"});h.on("connect",function(){f();k();b();i();a=true})}else{i()}},sendMovement:function(l,m){h.emit("movementCreatorToConnector",{friend:e,x:l,y:m})},onReceiveMovement:function(l){h.on("movementConnectorToCreator",function(m){l(m)})},sendDamage:function(l,m){h.emit("damageCreatorToConnector",{friend:e,enemy:l,damage:m})},onReceiveDamage:function(l){h.on("damageConnectorToCreator",function(m){l(m)})},sendUpdateHealth:function(l){h.emit("updateHealthCreatorToConnector",{friend:e,total:l})},onReceiveUpdateHealth:function(l){h.on("updateHealthConnectorToCreator",function(o){var n=[];var p=Crafty("Enemy");for(var m=0;m<o.total;m++){if(Crafty(p[m]).length>0){n[Crafty(p[m])._id]=Crafty(p[m])._enemyHealth}}h.emit("updateHealthCreatorToConnectorACK",{friend:e,healths:n})});h.on("updateHealthConnectorToCreatorACK",function(m){l(m)})},sendExit:function(){h.emit("exitCreatorToConnector",{friend:e})},onReceiveExit:function(l){h.on("exitConnectorToCreator",function(){l()})},closeCreator:function(){h.emit("close")}}});